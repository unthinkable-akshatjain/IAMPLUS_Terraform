name: "Terraform Deployment"
on:
  # Manual trigger
  workflow_dispatch:
  push:
    branches: [ SIT , master ]
    
defaults:
  run:
    shell: bash
    working-directory: ./system_integration_testing/me-south-1/
    
jobs:
  terraform:

    name: 'Terragrunt Initialization, Validation and Apply'
    runs-on: ubuntu-latest

    env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_DEFAULT_REGION: ap-south-1

    steps:
      - name: Checkout
        uses: actions/checkout@v2   #checkout@v2
        
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: true
          
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.35.14
          
      - name: Interact with Terragrunt
        run: terragrunt --version

      - name: Terragrunt Init
        id: init
        run: |
           ls
           pwd
           terragrunt init -input=false
           
on:
  pull_request:
    types:
      - opened
    branches: [ SIT , master ]
    
jobs:
  terraform:

    name: 'Terragrunt Formatting and Validation'
    runs-on: ubuntu-latest

    env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         AWS_DEFAULT_REGION: ap-south-1

    steps:
      - name: Terragrunt Format
        if: github.event_name == 'pull_request'
        id: fmt
        run: |
           terragrunt fmt

      - name: Terragrunt Validate
        if: github.event_name == 'pull_request'
        id: validate
        run: |
           terragrunt validate
           

      - name: Terragrunt Plan
        if: github.event_name == 'merge_request' || github.event.pull_request.merged == true  #github.event_name == 'push' || 
        id: plan
        run: |
          terragrunt plan
          
      - name: Terragrunt Apply
        if: github.event.pull_request.merged == true #github.event_name == 'push' || github.event_name == 'merge_request' 
        id: apply
        run: |
           terraform apply
           
      - name: Terraform destroy
        if: github.ref == 'refs/heads/main'
        run: |
           terraform destroy
  
  comment:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
